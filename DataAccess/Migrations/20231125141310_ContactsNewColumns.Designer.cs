// <auto-generated />
using System;
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20231125141310_ContactsNewColumns")]
    partial class ContactsNewColumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Data.Contacts", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("SharingBMInt")
                        .HasColumnType("int");

                    b.Property<int?>("SharingCountry")
                        .HasColumnType("int");

                    b.Property<int?>("SharingTeachers")
                        .HasColumnType("int");

                    b.Property<int?>("TotalCourses")
                        .HasColumnType("int");

                    b.Property<double?>("TotalFees")
                        .HasColumnType("float");

                    b.Property<double?>("TotalIncome")
                        .HasColumnType("float");

                    b.Property<int?>("TotalStudents")
                        .HasColumnType("int");

                    b.Property<int?>("TotalTeachers")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country_calculated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country_of_residence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_of_birth_date_picker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("do_you_speak_english_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender__")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hs_language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobilephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("spiritual_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("verified_aky_teacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("verified_art_teacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("verified_knowledge_teachers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("verified_music")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("verified_rituals_teacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("verified_yoga_and_meditation_teachers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ContactsList");
                });

            modelBuilder.Entity("DataAccess.Data.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedAt")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DateTimeAdded")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Food")
                        .HasColumnType("float");

                    b.Property<long?>("LineItemId")
                        .HasColumnType("bigint");

                    b.Property<double?>("LineItemPrice")
                        .HasColumnType("float");

                    b.Property<string>("LineItemTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("OtherFees")
                        .HasColumnType("float");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Quantity")
                        .HasColumnType("tinyint");

                    b.Property<string>("Refunded")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Rent")
                        .HasColumnType("float");

                    b.Property<string>("SalesChannel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Store")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Transport")
                        .HasColumnType("float");

                    b.Property<string>("consent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("newcomer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("sku")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CoursesList");
                });
#pragma warning restore 612, 618
        }
    }
}
